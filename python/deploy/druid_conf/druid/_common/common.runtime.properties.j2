#
# Extensions
#

druid.extensions.directory=dist/druid/extensions
druid.extensions.hadoopDependenciesDir=dist/druid/hadoop-dependencies
druid.extensions.loadList=["druid-kafka-indexing-service", "druid-s3-extensions", "mysql-metadata-storage", "druid-influxdb-emitter"]

#
# Logging
#

# Log all runtime properties on startup. Disable to avoid logging properties on startup:
druid.startup.logging.logProperties=true

#
# Zookeeper
#

druid.zk.service.host={{ druid_zookeeper_ips|join(',') }}
druid.zk.paths.base=/druid

#
# Metadata storage
#

# For Derby server on your Druid Coordinator (only viable in a cluster with a single Coordinator, no fail-over):
#druid.metadata.storage.type=derby
#druid.metadata.storage.connector.connectURI=jdbc:derby://master.example.com:1527/var/druid/metadata.db;create=true
#druid.metadata.storage.connector.host=master.example.com
#druid.metadata.storage.connector.port=1527

# For MySQL:
druid.metadata.storage.type=mysql
druid.metadata.storage.connector.connectURI=jdbc:mysql://{{ druid_mysql_host }}:3306/druid
druid.metadata.storage.connector.user=druid
druid.metadata.storage.connector.password=herd_mixture&wing_union

# For PostgreSQL:
#druid.metadata.storage.type=postgresql
#druid.metadata.storage.connector.connectURI=jdbc:postgresql://db.example.com:5432/druid
#druid.metadata.storage.connector.user=...
#druid.metadata.storage.connector.password=...

#
# Deep storage
#

# For local disk (only viable in a cluster if this is a network mount):
druid.storage.type=local
druid.storage.storageDirectory=var/druid/segments

# For HDFS:
#druid.storage.type=hdfs
#druid.storage.storageDirectory=/druid/segments

# For S3:
druid.storage.type=s3
druid.storage.bucket={{ druid_s3_bucket }}
druid.storage.baseKey=druid/segments

#
# Indexing service logs
#

# For local disk (only viable in a cluster if this is a network mount):
#druid.indexer.logs.type=file
#druid.indexer.logs.directory=var/druid/indexing-logs

# For HDFS:
#druid.indexer.logs.type=hdfs
#druid.indexer.logs.directory=/druid/indexing-logs

# For S3:
druid.indexer.logs.type=s3
druid.indexer.logs.s3Bucket={{ druid_s3_bucket }}
druid.indexer.logs.s3Prefix=druid/indexing-logs

#
# Service discovery
#

druid.selectors.indexing.serviceName=druid/overlord
druid.selectors.coordinator.serviceName=druid/coordinator

#
# Monitoring
#

druid.monitoring.monitors=["org.apache.druid.java.util.metrics.JvmMonitor", "org.apache.druid.java.util.metrics.SysMonitor"]
druid.emitter=composing
druid.emitter.composing.emitters=["influxdb"]

# Logging emitter
#druid.emitter.logging.logLevel=info

# InfluxDB emitter
druid.emitter.influxdb.hostname=internal.timestream.rubrik.com
druid.emitter.influxdb.port=80
druid.emitter.influxdb.protocol=http
druid.emitter.influxdb.influxdbUserName=dummy
druid.emitter.influxdb.influxdbPassword=dummy
druid.emitter.influxdb.databaseName=anomalydb-metrics
druid.emitter.influxdb.dimensionWhitelist=["dataSource", "taskType", "gcName", "gcGen", "memKind", "server", "tier", "priority", "fsDirName", "taskStatus"]


# Enable javascript. This affects the JavaScript parser, filter, extractionFn,
# aggregator, post-aggregator, router strategy, and worker selection strategy.
druid.javascript.enabled=true
